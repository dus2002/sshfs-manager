#!/bin/bash

options="sshfs_sync,direct_io"
user="$(whoami)"
host="localhost"
hostdir="/"
mountpoint="${HOME}/mnt/${host}"
mountlist="${HOME}/.config/mountpoints"

mount(){
	host=${2}
	source ${mountpoint}/mount.sh
}

umount(){
	umount ${mountpoint}
}

form(){
	read -p "Tell me the name of the host that you want to connect to: "
	host=${REPLY}
	read -p "Tell me the host's user that you want to login with: "
	user=${REPLY}
	read -p "Tell me the remote's path you want to mount (leave empty for root): "
	if [ ${REPLY} != ${hostdir} ]
	then
		hostdir="${REPLY}"
	fi
	read -p "Tell me where you want to mount the remote's folder (default is ${mountpoint}): "
	if [ ${REPLY} != ${mountpoint} ]
	then
		mountpoint="${REPLY}"
	fi
	read -p "Tell me if you want to set some options for SSHFS (default is ${options}): "
	if [ ${REPLY} != ${options} ] && [ -n ${REPLY} ]
	then
		options="${REPLY}"
	fi
}

create_mountpoint(){
	form
	mkdir -p ${mountpoint}
	touch ${mountpoint}/mount.sh
	chmod a+x ${mountpoint}/mount.sh
	echo '#!/bin/bash' > ${mountpoint}/mount.sh
	echo "export options=${options}" >> ${mountpoint}/mount.sh
	echo "export user=${user}" >> ${mountpoint}/mount.sh
	echo "export host=${host}" >> ${mountpoint}/mount.sh
	echo "export hostdir=${hostdir}" >> ${mountpoint}/mount.sh
	echo 'sshfs ${user}@${host}:${hostdir} ${mountpoint} -o ${options}' >> ${mountpoint}/mount.sh
}

help(){
	echo "This is a wrapper script made by DUS2002, which helps you to store, and manage your SSHFS mountpoints"
	echo " "
	echo " "
	echo "Usage (sshfs-manager [action]:"
	echo "  '-create-mountpoint | create-mountpoint': Create a mountpoint using the integrated assistant."
	echo "  '-mount | mount [mountpointname]': Mount a mountpoint generated by the assistant."
	echo "  '-help | help | [nothing]:' Show this text."
}
for i in "$1"
do
case $i in
	
	-create-mountpoint | create-mountpoint)
	create_mountpoint
	exit

	;;

	-mount | mount)
	mount
	exit
	
	;;
	
	-help | help)
	help
	exit

esac
done

help
exit
